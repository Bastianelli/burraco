/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package it.bastianelli.personale.burraco.model;

import com.liferay.portal.kernel.bean.AutoEscape;
import com.liferay.portal.kernel.model.BaseModel;
import com.liferay.portal.kernel.model.GroupedModel;
import com.liferay.portal.kernel.model.ShardedModel;
import com.liferay.portal.kernel.model.StagedAuditedModel;

import java.util.Date;

import org.osgi.annotation.versioning.ProviderType;

/**
 * The base model interface for the Round service. Represents a row in the &quot;BURRACO_Round&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This interface and its corresponding implementation <code>it.bastianelli.personale.burraco.model.impl.RoundModelImpl</code> exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in <code>it.bastianelli.personale.burraco.model.impl.RoundImpl</code>.
 * </p>
 *
 * @author Brian Wing Shun Chan
 * @see Round
 * @generated
 */
@ProviderType
public interface RoundModel
	extends BaseModel<Round>, GroupedModel, ShardedModel, StagedAuditedModel {

	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this interface directly. All methods that expect a round model instance should use the {@link Round} interface instead.
	 */

	/**
	 * Returns the primary key of this round.
	 *
	 * @return the primary key of this round
	 */
	public long getPrimaryKey();

	/**
	 * Sets the primary key of this round.
	 *
	 * @param primaryKey the primary key of this round
	 */
	public void setPrimaryKey(long primaryKey);

	/**
	 * Returns the uuid of this round.
	 *
	 * @return the uuid of this round
	 */
	@AutoEscape
	@Override
	public String getUuid();

	/**
	 * Sets the uuid of this round.
	 *
	 * @param uuid the uuid of this round
	 */
	@Override
	public void setUuid(String uuid);

	/**
	 * Returns the round ID of this round.
	 *
	 * @return the round ID of this round
	 */
	public long getRoundId();

	/**
	 * Sets the round ID of this round.
	 *
	 * @param roundId the round ID of this round
	 */
	public void setRoundId(long roundId);

	/**
	 * Returns the group ID of this round.
	 *
	 * @return the group ID of this round
	 */
	@Override
	public long getGroupId();

	/**
	 * Sets the group ID of this round.
	 *
	 * @param groupId the group ID of this round
	 */
	@Override
	public void setGroupId(long groupId);

	/**
	 * Returns the company ID of this round.
	 *
	 * @return the company ID of this round
	 */
	@Override
	public long getCompanyId();

	/**
	 * Sets the company ID of this round.
	 *
	 * @param companyId the company ID of this round
	 */
	@Override
	public void setCompanyId(long companyId);

	/**
	 * Returns the user ID of this round.
	 *
	 * @return the user ID of this round
	 */
	@Override
	public long getUserId();

	/**
	 * Sets the user ID of this round.
	 *
	 * @param userId the user ID of this round
	 */
	@Override
	public void setUserId(long userId);

	/**
	 * Returns the user uuid of this round.
	 *
	 * @return the user uuid of this round
	 */
	@Override
	public String getUserUuid();

	/**
	 * Sets the user uuid of this round.
	 *
	 * @param userUuid the user uuid of this round
	 */
	@Override
	public void setUserUuid(String userUuid);

	/**
	 * Returns the user name of this round.
	 *
	 * @return the user name of this round
	 */
	@AutoEscape
	@Override
	public String getUserName();

	/**
	 * Sets the user name of this round.
	 *
	 * @param userName the user name of this round
	 */
	@Override
	public void setUserName(String userName);

	/**
	 * Returns the create date of this round.
	 *
	 * @return the create date of this round
	 */
	@Override
	public Date getCreateDate();

	/**
	 * Sets the create date of this round.
	 *
	 * @param createDate the create date of this round
	 */
	@Override
	public void setCreateDate(Date createDate);

	/**
	 * Returns the modified date of this round.
	 *
	 * @return the modified date of this round
	 */
	@Override
	public Date getModifiedDate();

	/**
	 * Sets the modified date of this round.
	 *
	 * @param modifiedDate the modified date of this round
	 */
	@Override
	public void setModifiedDate(Date modifiedDate);

	/**
	 * Returns the game ID of this round.
	 *
	 * @return the game ID of this round
	 */
	public long getGameId();

	/**
	 * Sets the game ID of this round.
	 *
	 * @param gameId the game ID of this round
	 */
	public void setGameId(long gameId);

	/**
	 * Returns the order of this round.
	 *
	 * @return the order of this round
	 */
	public int getOrder();

	/**
	 * Sets the order of this round.
	 *
	 * @param order the order of this round
	 */
	public void setOrder(int order);

	/**
	 * Returns the pots of this round.
	 *
	 * @return the pots of this round
	 */
	public boolean getPots();

	/**
	 * Returns <code>true</code> if this round is pots.
	 *
	 * @return <code>true</code> if this round is pots; <code>false</code> otherwise
	 */
	public boolean isPots();

	/**
	 * Sets whether this round is pots.
	 *
	 * @param pots the pots of this round
	 */
	public void setPots(boolean pots);

	/**
	 * Returns the clean run of this round.
	 *
	 * @return the clean run of this round
	 */
	public int getCleanRun();

	/**
	 * Sets the clean run of this round.
	 *
	 * @param cleanRun the clean run of this round
	 */
	public void setCleanRun(int cleanRun);

	/**
	 * Returns the dirty run of this round.
	 *
	 * @return the dirty run of this round
	 */
	public int getDirtyRun();

	/**
	 * Sets the dirty run of this round.
	 *
	 * @param dirtyRun the dirty run of this round
	 */
	public void setDirtyRun(int dirtyRun);

	/**
	 * Returns the score of this round.
	 *
	 * @return the score of this round
	 */
	public int getScore();

	/**
	 * Sets the score of this round.
	 *
	 * @param score the score of this round
	 */
	public void setScore(int score);

	/**
	 * Returns the opponent user ID of this round.
	 *
	 * @return the opponent user ID of this round
	 */
	public long getOpponentUserId();

	/**
	 * Sets the opponent user ID of this round.
	 *
	 * @param opponentUserId the opponent user ID of this round
	 */
	public void setOpponentUserId(long opponentUserId);

	/**
	 * Returns the opponent user uuid of this round.
	 *
	 * @return the opponent user uuid of this round
	 */
	public String getOpponentUserUuid();

	/**
	 * Sets the opponent user uuid of this round.
	 *
	 * @param opponentUserUuid the opponent user uuid of this round
	 */
	public void setOpponentUserUuid(String opponentUserUuid);

	/**
	 * Returns the opponent user name of this round.
	 *
	 * @return the opponent user name of this round
	 */
	@AutoEscape
	public String getOpponentUserName();

	/**
	 * Sets the opponent user name of this round.
	 *
	 * @param opponentUserName the opponent user name of this round
	 */
	public void setOpponentUserName(String opponentUserName);

	/**
	 * Returns the opponent pots of this round.
	 *
	 * @return the opponent pots of this round
	 */
	public boolean getOpponentPots();

	/**
	 * Returns <code>true</code> if this round is opponent pots.
	 *
	 * @return <code>true</code> if this round is opponent pots; <code>false</code> otherwise
	 */
	public boolean isOpponentPots();

	/**
	 * Sets whether this round is opponent pots.
	 *
	 * @param opponentPots the opponent pots of this round
	 */
	public void setOpponentPots(boolean opponentPots);

	/**
	 * Returns the opponent clean run of this round.
	 *
	 * @return the opponent clean run of this round
	 */
	public int getOpponentCleanRun();

	/**
	 * Sets the opponent clean run of this round.
	 *
	 * @param opponentCleanRun the opponent clean run of this round
	 */
	public void setOpponentCleanRun(int opponentCleanRun);

	/**
	 * Returns the opponent dirty run of this round.
	 *
	 * @return the opponent dirty run of this round
	 */
	public int getOpponentDirtyRun();

	/**
	 * Sets the opponent dirty run of this round.
	 *
	 * @param opponentDirtyRun the opponent dirty run of this round
	 */
	public void setOpponentDirtyRun(int opponentDirtyRun);

	/**
	 * Returns the opponent score of this round.
	 *
	 * @return the opponent score of this round
	 */
	public int getOpponentScore();

	/**
	 * Sets the opponent score of this round.
	 *
	 * @param opponentScore the opponent score of this round
	 */
	public void setOpponentScore(int opponentScore);

}